name: Deploy to Staging

on:
  push:
    branches:
      - main  # Trigger on push to the main branch

jobs:
  deploy_staging:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2  # Checks out the code

    - name: Set up Python
      uses: actions/setup-python@v2  # Sets up the specified Python version
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt  # Installs dependencies

    - name: Authenticate with Databricks CLI
      env:
        DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
        DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
      run: |
        pip install databricks-cli  # Installs Databricks CLI
        databricks configure --token <<< "$DATABRICKS_HOST\n$DATABRICKS_TOKEN"  # Configures CLI with token

    - name: Deploy to Staging
      run: |
        chmod +x deploy/deploy_jobs.sh  # Makes the deployment script executable
        ./deploy/deploy_jobs.sh stg ${{ github.sha }}  # Deploys to staging using the current commit hash

    - name: Run Integration and End-to-End Tests in Staging
      run: |
        pytest tests/integration --junitxml=integration-results.xml  # Runs integration tests
        pytest tests/e2e --junitxml=e2e-results.xml  # Runs end-to-end tests

    - name: Upload Integration Test Results
      uses: actions/upload-artifact@v3
      with:
        name: integration-test-results  # Uploads integration test results
        path: integration-results.xml

    - name: Upload End-to-End Test Results
      uses: actions/upload-artifact@v3
      with:
        name: e2e-test-results  # Uploads end-to-end test results
        path: e2e-results.xml
