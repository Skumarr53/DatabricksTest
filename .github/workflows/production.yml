name: Deploy to Production

on:
  workflow_dispatch:  # Manual trigger for production deployment

jobs:
  deploy_production:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2  # Checks out the code

    - name: Set up Python
      uses: actions/setup-python@v2  # Sets up the specified Python version
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt  # Installs dependencies

    - name: Authenticate with Databricks CLI
      env:
        DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
        DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
      run: |
        pip install databricks-cli  # Installs Databricks CLI
        databricks configure --token <<< "$DATABRICKS_HOST\n$DATABRICKS_TOKEN"  # Configures CLI with token

    - name: Deploy to Production
      run: |
        chmod +x deploy/deploy_jobs.sh  # Makes the deployment script executable
        ./deploy/deploy_jobs.sh prod ${{ github.sha }}  # Deploys to production using the current commit hash

    - name: Monitor Deployment
      run: |
        echo "Monitoring deployment..."  # Placeholder for monitoring scripts

    - name: Notify on Success
      uses: slackapi/slack-github-action@v1.23.0
      with:
        channel-id: ${{ secrets.SLACK_CHANNEL_ID }}  # Sends success notification to Slack
        slack-message: "Production deployment successful!"
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

    - name: Rollback on Failure
      if: failure()
      run: |
        echo "Deployment failed. Rolling back..."  # Placeholder for rollback commands
